name: Python Test and Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run tests on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        include:
          - python-version: "3.13"
            collect-coverage: "false"
          - python-version: "3.8"
            collect-coverage: "false"
          - python-version: "3.9"
            collect-coverage: "false"
          - python-version: "3.10"
            collect-coverage: "false"
          - python-version: "3.11"
            collect-coverage: "false"
          - python-version: "3.12"
            collect-coverage: "false"

    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # 安装 coverage 工具和 codecov
        pip install coverage codecov pytest

    - name: Run tests with unittest
      run: |
        if [ "${{ matrix.collect-coverage }}" = "true" ]; then
          coverage run -m pytest tests/ -k "not stress"  # 排除压力测试
          coverage xml  # 生成覆盖率的XML报告
          coverage report  # 在终端显示覆盖率报告
        else
          python -m pytest test_socket_chat.py -v
          python -m pytest test_socket_chat.py -v -m benchmark
        fi

    - name: Upload coverage to Codecov
      if: matrix.collect-coverage == 'true'
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
